pipeline{
agent any
environment {
        PATH = "$PATH:/opt/apache-maven-3.8.3/bin"
    }
stages {
         stage('Project Build'){
            steps{
                sh 'mvn clean package'
            }
         }
         stage('SonarQube analysis') {
        steps{
        withSonarQubeEnv('sonar-9') { 
        sh "mvn sonar:sonar  -Dsonar.projectKey=Order_Project -Dsonar.scm.disabled=true"
    }
        }
         }
    stage('Docker Build and Tag and push into ECR') {
           steps {
             
	  sh '''
	     set +x
             sudo docker build -t order-app .
	     sudo $(sudo aws ecr get-login --no-include-email --region us-west-1)
	     sudo docker tag order-app:latest 431167860687.dkr.ecr.us-west-1.amazonaws.com/node-repo:order-app
             sudo docker push 431167860687.dkr.ecr.us-west-1.amazonaws.com/node-repo:order-app
             sudo docker rmi -f 431167860687.dkr.ecr.us-west-1.amazonaws.com/node-repo:order-app
	     sudo docker rmi -f node-repo
               ''' 
                
             
          }
        }
    stage('Services Deployrment on ECS fargate ') {      
      steps {

         input message: "Do you want to proceed Deployrment on ECS fargate ?"   
          sh '''
             sh ./deploy.sh
		      '''
      }


}
}

}
